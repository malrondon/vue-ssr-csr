import path from 'path';
import webpack from 'webpack';
import MFS from 'memory-fs';

const clientConfig = require('../../../internals/webpack/client');
const serverConfig = require('../../../internals/webpack/server');

export default (app, onServerBundleReady) => {
  clientConfig.entry = ['webpack-hot-middleware/client', clientConfig.entry[clientConfig.entry.length - 1]];

  const clientCompiler = webpack(clientConfig);
  // setup dev middleware
  app.use(
    require('webpack-dev-middleware')(clientCompiler, {
      publicPath: clientConfig.output.publicPath,
      serverSideRender: true,
      logLevel: 'silent',
    })
  );
  // setup hot middleware
  app.use(require('webpack-hot-middleware')(clientCompiler));
  // watch src files and rebuild SSR bundle
  global.console.log('Building SSR bundle...');
  const serverCompiler = webpack(serverConfig);
  const mfs = new MFS();

  serverCompiler.outputFileSystem = mfs;
  serverCompiler.watch({}, (error, stats) => {
    if (error) throw error;

    global.console.log(
      `${stats.toString({
        colors: true,
        modules: false,
        children: false,
        chunks: false,
        chunkModules: false,
      })}\n\n`
    );

    if (stats.hasErrors()) {
      console.error(stats.compilation.errors);
      throw new Error(stats.compilation.errors);
    }
    // read bundle generated by vue-ssr-webpack-plugin
    const bundle = JSON.parse(
      mfs.readFileSync(path.join(clientConfig.output.path, 'vue-ssr-server-bundle.json'), 'utf-8')
    );
    onServerBundleReady(bundle);
  });
};
